<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.1.RELEASE</version>
    <relativePath />
  </parent>
  <groupId>com.example</groupId>
  <artifactId>java-spring-login-jwt</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>java-spring-login-jwt</name>
  <description>My cool spring boot project.</description>
  <properties>
    <java.version>11</java.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>2.3.1</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>static-analysis</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>2.3</version>
          </plugin>
        </plugins>
      </reporting>
      <build>
        <plugins>
          <!-- PMD Static Analysis -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.13.0</version>
            <executions>
              <execution>
                <id>pmd</id>
                <goals>
                  <goal>pmd</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
            <configuration>
              <failOnViolation>false</failOnViolation>
              <failurePriority>4</failurePriority>
              <verbose>true</verbose>
              <rulesets>
                <ruleset>/rulesets/java/maven-pmd-plugin-default.xml</ruleset>
              </rulesets>
            </configuration>
          </plugin>
          <!-- SpotBugs Static Analysis -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.0.4</version>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <failOnError>false</failOnError>
              <includeFilterFile>${session.executionRootDirectory}/spotbugs-security-include.xml</includeFilterFile>
              <excludeFilterFile>${session.executionRootDirectory}/spotbugs-security-exclude.xml</excludeFilterFile>
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>1.10.1</version>
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <id>spotbugs</id>
                <goals>
                  <goal>spotbugs</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- JACOCO-->
    <profile>
      <id>jacoco</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jacoco.version>0.8.3</jacoco.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <configuration>
              <skip>${maven.test.skip}</skip>
              <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
              <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
              <output>file</output>
              <append>true</append>
              <excludes>
                <exclude>*MethodAccess</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>jacoco-initialize</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <phase>test-compile</phase>
              </execution>
              <execution>
                <id>jacoco-site</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>jacoco-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>PACKAGE</element>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.90</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- SONAR -->
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.java.pmd.reportPaths>${project.basedir}/target/pmd.xml</sonar.java.pmd.reportPaths>
        <sonar.java.spotbugs.reportPaths>${project.basedir}/target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>
      </properties>
    </profile>

    <!-- SONARQUBE -->
    <profile>
      <id>sonar-local</id>
      <properties>
        <sonar.login>admin</sonar.login>
        <sonar.password>admin</sonar.password>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.2</version>
        </dependency>
      </dependencies>
    </profile>

    <!-- SONARCLOUD -->
    <profile>
      <id>sonar-remote</id>
      <properties>
        <sonar.organization>meguiluzortiz</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.login>${env.SONAR_TOKEN}</sonar.login>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.2</version>
        </dependency>
      </dependencies>
    </profile>

  </profiles>
</project>
